; Auto-generated. Do not edit!


(cl:in-package giskard_msgs-msg)


;//! \htmlinclude MoveResult.msg.html

(cl:defclass <MoveResult> (roslisp-msg-protocol:ros-message)
  ((error_code
    :reader error_code
    :initarg :error_code
    :type cl:fixnum
    :initform 0)
   (trajectory
    :reader trajectory
    :initarg :trajectory
    :type trajectory_msgs-msg:JointTrajectory
    :initform (cl:make-instance 'trajectory_msgs-msg:JointTrajectory)))
)

(cl:defclass MoveResult (<MoveResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <MoveResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'MoveResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name giskard_msgs-msg:<MoveResult> is deprecated: use giskard_msgs-msg:MoveResult instead.")))

(cl:ensure-generic-function 'error_code-val :lambda-list '(m))
(cl:defmethod error_code-val ((m <MoveResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader giskard_msgs-msg:error_code-val is deprecated.  Use giskard_msgs-msg:error_code instead.")
  (error_code m))

(cl:ensure-generic-function 'trajectory-val :lambda-list '(m))
(cl:defmethod trajectory-val ((m <MoveResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader giskard_msgs-msg:trajectory-val is deprecated.  Use giskard_msgs-msg:trajectory instead.")
  (trajectory m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<MoveResult>)))
    "Constants for message type '<MoveResult>"
  '((:SUCCESS . 0)
    (:INSOLVABLE . 1)
    (:PATH_COLLISION . 2)
    (:START_STATE_COLLISION . 3)
    (:END_STATE_COLLISION . 4)
    (:SOLVER_TIMEOUT . 5)
    (:INTERRUPTED . 6)
    (:MAX_NWSR_REACHED . 7)
    (:QP_SOLVER_ERROR . 8)
    (:UNKNOWN_OBJECT . 9)
    (:SYMENGINE_ERROR . 10))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'MoveResult)))
    "Constants for message type 'MoveResult"
  '((:SUCCESS . 0)
    (:INSOLVABLE . 1)
    (:PATH_COLLISION . 2)
    (:START_STATE_COLLISION . 3)
    (:END_STATE_COLLISION . 4)
    (:SOLVER_TIMEOUT . 5)
    (:INTERRUPTED . 6)
    (:MAX_NWSR_REACHED . 7)
    (:QP_SOLVER_ERROR . 8)
    (:UNKNOWN_OBJECT . 9)
    (:SYMENGINE_ERROR . 10))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <MoveResult>) ostream)
  "Serializes a message object of type '<MoveResult>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'error_code)) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'trajectory) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <MoveResult>) istream)
  "Deserializes a message object of type '<MoveResult>"
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'error_code)) (cl:read-byte istream))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'trajectory) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<MoveResult>)))
  "Returns string type for a message object of type '<MoveResult>"
  "giskard_msgs/MoveResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'MoveResult)))
  "Returns string type for a message object of type 'MoveResult"
  "giskard_msgs/MoveResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<MoveResult>)))
  "Returns md5sum for a message object of type '<MoveResult>"
  "30a5ca36aa9d78817486028053bcba3f")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'MoveResult)))
  "Returns md5sum for a message object of type 'MoveResult"
  "30a5ca36aa9d78817486028053bcba3f")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<MoveResult>)))
  "Returns full string definition for message of type '<MoveResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# result~%# definition of possible error code values~%uint8 SUCCESS=0~%uint8 INSOLVABLE=1~%uint8 PATH_COLLISION=2~%uint8 START_STATE_COLLISION=3~%uint8 END_STATE_COLLISION=4~%uint8 SOLVER_TIMEOUT=5~%uint8 INTERRUPTED=6~%uint8 MAX_NWSR_REACHED=7 # increasing NWSR might fix this~%uint8 QP_SOLVER_ERROR=8~%uint8 UNKNOWN_OBJECT=9~%uint8 SYMENGINE_ERROR=10~%~%# error codes for the overall action goal~%uint8 error_code~%~%# planned trajectory~%trajectory_msgs/JointTrajectory trajectory~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'MoveResult)))
  "Returns full string definition for message of type 'MoveResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# result~%# definition of possible error code values~%uint8 SUCCESS=0~%uint8 INSOLVABLE=1~%uint8 PATH_COLLISION=2~%uint8 START_STATE_COLLISION=3~%uint8 END_STATE_COLLISION=4~%uint8 SOLVER_TIMEOUT=5~%uint8 INTERRUPTED=6~%uint8 MAX_NWSR_REACHED=7 # increasing NWSR might fix this~%uint8 QP_SOLVER_ERROR=8~%uint8 UNKNOWN_OBJECT=9~%uint8 SYMENGINE_ERROR=10~%~%# error codes for the overall action goal~%uint8 error_code~%~%# planned trajectory~%trajectory_msgs/JointTrajectory trajectory~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <MoveResult>))
  (cl:+ 0
     1
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'trajectory))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <MoveResult>))
  "Converts a ROS message object to a list"
  (cl:list 'MoveResult
    (cl:cons ':error_code (error_code msg))
    (cl:cons ':trajectory (trajectory msg))
))
